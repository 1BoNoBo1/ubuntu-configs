#!/bin/bash
# ============================================================
# Script : finalize_adaptive.sh
# Objectif : Finalisation et validation syst√®me adaptatif
# Usage : ./finalize_adaptive.sh
# ============================================================

set -e

# Couleurs
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
MAGENTA='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m'

echo_color() {
    echo -e "${2}${1}${NC}"
}

echo_color "üéØ FINALISATION SYST√àME UBUNTU ADAPTATIF" $MAGENTA
echo_color "=========================================" $MAGENTA
echo_color ""

# 1. V√©rification structure compl√®te
echo_color "üìÅ 1. V√©rification structure finale" $CYAN
echo_color "------------------------------------" $CYAN

REQUIRED_FILES=(
    "adaptive_ubuntu.sh"
    "demo_adaptive.sh"
    "test_adaptive_integration.sh"
    "README_Adaptive.md"
    "GUIDE_UTILISATION.md"
    "mon_shell/adaptive_detection.sh"
    "mon_shell/adaptive_tools.sh"
    "mon_shell/adaptive_monitoring.sh"
    "mon_shell/colors.sh"
)

all_files_present=true
for file in "${REQUIRED_FILES[@]}"; do
    if [[ -f "$file" ]]; then
        echo_color "  ‚úÖ $file" $GREEN
    else
        echo_color "  ‚ùå $file manquant" $YELLOW
        all_files_present=false
    fi
done

if $all_files_present; then
    echo_color "‚úÖ Tous les fichiers requis sont pr√©sents" $GREEN
else
    echo_color "‚ö†Ô∏è Certains fichiers manquent" $YELLOW
fi

echo_color ""

# 2. Permissions ex√©cutables
echo_color "üîß 2. Correction permissions ex√©cutables" $CYAN
echo_color "-------------------------------------------" $CYAN

EXECUTABLE_FILES=(
    "adaptive_ubuntu.sh"
    "demo_adaptive.sh"
    "test_adaptive_integration.sh"
    "finalize_adaptive.sh"
    "mon_shell/adaptive_detection.sh"
    "mon_shell/adaptive_tools.sh"
    "mon_shell/adaptive_monitoring.sh"
    "mon_shell/colors.sh"
)

for file in "${EXECUTABLE_FILES[@]}"; do
    if [[ -f "$file" ]]; then
        chmod +x "$file"
        echo_color "  ‚úÖ $file - permissions corrig√©es" $GREEN
    fi
done

echo_color ""

# 3. Test de syntaxe rapide
echo_color "üìù 3. Validation syntaxe" $CYAN
echo_color "-------------------------" $CYAN

syntax_errors=0
for file in "${EXECUTABLE_FILES[@]}"; do
    if [[ -f "$file" ]]; then
        if bash -n "$file" 2>/dev/null; then
            echo_color "  ‚úÖ $file - syntaxe OK" $GREEN
        else
            echo_color "  ‚ùå $file - erreur syntaxe" $YELLOW
            ((syntax_errors++))
        fi
    fi
done

if [[ $syntax_errors -eq 0 ]]; then
    echo_color "‚úÖ Aucune erreur de syntaxe d√©tect√©e" $GREEN
else
    echo_color "‚ö†Ô∏è $syntax_errors erreurs de syntaxe trouv√©es" $YELLOW
fi

echo_color ""

# 4. Test fonctionnel rapide
echo_color "‚ö° 4. Test fonctionnel rapide" $CYAN
echo_color "-----------------------------" $CYAN

# Test d√©tection
if ./adaptive_ubuntu.sh detect >/dev/null 2>&1; then
    echo_color "  ‚úÖ D√©tection syst√®me fonctionne" $GREEN
else
    echo_color "  ‚ùå Probl√®me d√©tection syst√®me" $YELLOW
fi

# Test aide
if ./adaptive_ubuntu.sh help >/dev/null 2>&1; then
    echo_color "  ‚úÖ Aide accessible" $GREEN
else
    echo_color "  ‚ùå Probl√®me affichage aide" $YELLOW
fi

# Test chargement modules
if source mon_shell/adaptive_detection.sh >/dev/null 2>&1; then
    echo_color "  ‚úÖ Modules se chargent correctement" $GREEN
else
    echo_color "  ‚ùå Probl√®me chargement modules" $YELLOW
fi

echo_color ""

# 5. V√©rification int√©gration mon_shell
echo_color "üîó 5. V√©rification int√©gration mon_shell" $CYAN
echo_color "-----------------------------------------" $CYAN

# V√©rifier que les fichiers existants ne sont pas cass√©s
if [[ -f "mon_shell/aliases.sh" ]] && source mon_shell/aliases.sh >/dev/null 2>&1; then
    echo_color "  ‚úÖ aliases.sh compatible" $GREEN
else
    echo_color "  ‚ö†Ô∏è Probl√®me avec aliases.sh" $YELLOW
fi

# V√©rifier functions existantes
functions_ok=true
for func_file in mon_shell/functions_*.sh; do
    if [[ -f "$func_file" ]]; then
        if source "$func_file" >/dev/null 2>&1; then
            echo_color "  ‚úÖ $(basename "$func_file") compatible" $GREEN
        else
            echo_color "  ‚ö†Ô∏è Probl√®me avec $(basename "$func_file")" $YELLOW
            functions_ok=false
        fi
    fi
done

if $functions_ok; then
    echo_color "‚úÖ Int√©gration mon_shell r√©ussie" $GREEN
else
    echo_color "‚ö†Ô∏è Probl√®mes d'int√©gration d√©tect√©s" $YELLOW
fi

echo_color ""

# 6. R√©capitulatif syst√®me d√©tect√©
echo_color "üìä 6. R√©capitulatif syst√®me adaptatif" $CYAN
echo_color "--------------------------------------" $CYAN

# Charger la d√©tection
source mon_shell/adaptive_detection.sh >/dev/null 2>&1

echo_color "üéØ Syst√®me d√©tect√©:" $BLUE
echo_color "   Niveau: ${SYSTEM_TIER:-inconnu}" $NC
echo_color "   Score: ${SYSTEM_PERFORMANCE_SCORE:-0}/100" $NC
echo_color "   RAM: ${SYSTEM_RAM_MB:-?}MB" $NC
echo_color "   CPU: ${SYSTEM_CPU_CORES:-?} cores" $NC
echo_color "   Stockage: ${SYSTEM_STORAGE_TYPE:-?}" $NC

echo_color ""

# 7. Instructions finales
echo_color "üöÄ 7. Instructions finales" $CYAN
echo_color "---------------------------" $CYAN

echo_color "Le syst√®me Ubuntu adaptatif est pr√™t ! Voici les prochaines √©tapes :" $BLUE
echo_color ""
echo_color "üìã Tests recommand√©s :" $CYAN
echo_color "   ./demo_adaptive.sh              # D√©monstration compl√®te" $NC
echo_color "   ./test_adaptive_integration.sh  # Tests d'int√©gration" $NC
echo_color "   ./adaptive_ubuntu.sh detect     # Test d√©tection" $NC
echo_color ""
echo_color "‚öôÔ∏è Installation :" $CYAN
echo_color "   sudo ./adaptive_ubuntu.sh install  # Installation compl√®te adaptative" $NC
echo_color "   sudo ./enhance_ubuntu_geek.sh       # Transformation compl√®te syst√®me" $NC
echo_color ""
echo_color "üìö Documentation :" $CYAN
echo_color "   cat README_Adaptive.md           # Documentation d√©taill√©e" $NC
echo_color "   cat GUIDE_UTILISATION.md         # Guide utilisation rapide" $NC
echo_color ""
echo_color "üîß Maintenance :" $CYAN
echo_color "   ./adaptive_ubuntu.sh status      # √âtat syst√®me" $NC
echo_color "   ./adaptive_ubuntu.sh validate    # Validation installation" $NC
echo_color ""

# 8. Statistiques finales
echo_color "üìà 8. Statistiques du projet" $CYAN
echo_color "-----------------------------" $CYAN

total_lines=$(find . -name "*.sh" -exec wc -l {} + | tail -1 | awk '{print $1}')
total_files=$(find . -name "*.sh" | wc -l)
adaptive_files=$(find . -name "*adaptive*" | wc -l)

echo_color "üìä Projet ubuntu-configs :" $BLUE
echo_color "   Total lignes de code: $total_lines" $NC
echo_color "   Total scripts: $total_files" $NC
echo_color "   Fichiers adaptatifs: $adaptive_files" $NC
echo_color "   Architecture: Modulaire (mon_shell)" $NC
echo_color "   Fonctionnalit√©s: WebDAV + Restic + Adaptatif" $NC

echo_color ""
echo_color "üéâ SYST√àME UBUNTU ADAPTATIF FINALIS√â AVEC SUCC√àS !" $GREEN
echo_color ""
echo_color "Votre configuration ubuntu-configs est maintenant le d√©p√¥t" $CYAN
echo_color "le plus abouti avec d√©tection intelligente des ressources" $CYAN
echo_color "et adaptation automatique selon vos capacit√©s mat√©rielles !" $CYAN

echo_color ""
echo_color "üí° Conseil: Commencez par ./demo_adaptive.sh pour voir" $YELLOW
echo_color "   le syst√®me en action, puis sudo ./adaptive_ubuntu.sh install" $YELLOW
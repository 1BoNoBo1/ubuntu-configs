#!/bin/bash
# ============================================================
# Script : setup_webdav_kdrive.sh
# Objectif : Configurer le montage WebDAV pour Infomaniak kDrive
# Usage : sudo ./setup_webdav_kdrive.sh
# Compatibilité : Ubuntu ≥ 20.04 / Debian ≥ 11
# Auteur : Generated by Claude Code - 2025
# ============================================================

set -euo pipefail

# Variables de configuration
SAUVEGARDE_DIR="/home/${SUDO_USER}/SAUVEGARDE"
KDRIVE_MOUNT_POINT="${SAUVEGARDE_DIR}/kdrive"
DAVFS2_CONFIG_DIR="/home/${SUDO_USER}/.davfs2"
SECRETS_FILE="${DAVFS2_CONFIG_DIR}/secrets"

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo_color() {
    echo -e "${2}${1}${NC}"
}

# -------- Fonctions utilitaires --------

verifier_root() {
    if [[ "$EUID" -ne 0 ]]; then
        echo_color "Erreur : ce script doit être exécuté en tant que root (sudo)." $RED
        exit 1
    fi
    if [[ -z "${SUDO_USER:-}" || "$SUDO_USER" = "root" ]]; then
        echo_color "Veuillez lancer ce script en tant qu'utilisateur normal via sudo." $RED
        exit 1
    fi
    UTILISATEUR="$SUDO_USER"
    DOSSIER_HOME="/home/$UTILISATEUR"
    echo_color "Configuration pour l'utilisateur: $UTILISATEUR" $BLUE
}

installer_davfs2() {
    echo_color "🔄 Installation de davfs2..." $YELLOW
    apt-get update -qq
    apt-get install -y davfs2
    echo_color "✅ davfs2 installé avec succès" $GREEN
}

configurer_utilisateur_davfs2() {
    echo_color "👤 Configuration des permissions davfs2..." $YELLOW

    # Ajouter l'utilisateur au groupe davfs2
    usermod -a -G davfs2 "$UTILISATEUR"

    echo_color "✅ Utilisateur $UTILISATEUR ajouté au groupe davfs2" $GREEN
}

creer_structure_dossiers() {
    echo_color "📁 Création de la structure de dossiers..." $YELLOW

    # Créer le dossier SAUVEGARDE
    mkdir -p "$SAUVEGARDE_DIR"
    mkdir -p "$KDRIVE_MOUNT_POINT"

    # Créer le dossier de configuration davfs2
    mkdir -p "$DAVFS2_CONFIG_DIR"

    # Définir les bonnes permissions
    chown -R "$UTILISATEUR":"$UTILISATEUR" "$SAUVEGARDE_DIR"
    chown -R "$UTILISATEUR":"$UTILISATEUR" "$DAVFS2_CONFIG_DIR"
    chmod 700 "$DAVFS2_CONFIG_DIR"

    echo_color "✅ Structure de dossiers créée:" $GREEN
    echo_color "   - $SAUVEGARDE_DIR" $BLUE
    echo_color "   - $KDRIVE_MOUNT_POINT" $BLUE
    echo_color "   - $DAVFS2_CONFIG_DIR" $BLUE
}

configurer_credentials() {
    echo_color "🔐 Configuration des identifiants sécurisés..." $YELLOW

    # Demander les informations de connexion
    echo_color "Configuration des identifiants Infomaniak kDrive:" $BLUE
    read -p "Nom d'utilisateur Infomaniak (email): " KDRIVE_USERNAME
    read -s -p "Mot de passe: " KDRIVE_PASSWORD
    echo

    # Créer le fichier secrets
    cat > "$SECRETS_FILE" <<EOF
# Configuration WebDAV pour Infomaniak kDrive
# Format: URL username password
https://connect.drive.infomaniak.com/remote.php/dav/files/${KDRIVE_USERNAME}/ ${KDRIVE_USERNAME} ${KDRIVE_PASSWORD}
EOF

    # Sécuriser le fichier secrets
    chmod 600 "$SECRETS_FILE"
    chown "$UTILISATEUR":"$UTILISATEUR" "$SECRETS_FILE"

    echo_color "✅ Fichier de credentials créé et sécurisé" $GREEN
}

configurer_davfs2_global() {
    echo_color "⚙️  Configuration globale davfs2..." $YELLOW

    # Créer le fichier de configuration personnalisé
    cat >> /etc/davfs2/davfs2.conf <<EOF

# Configuration optimisée pour Infomaniak kDrive
use_locks 0
if_match_bug 1
drop_weak_etags 1
cache_size 256
table_size 4096
delay_upload 30
gui_optimize 1
EOF

    echo_color "✅ Configuration davfs2 optimisée" $GREEN
}

creer_script_mount() {
    echo_color "📜 Création du script de montage..." $YELLOW

    cat > /usr/local/bin/kdrive-mount <<'EOF'
#!/bin/bash
# Script de montage/démontage kDrive WebDAV

set -euo pipefail

KDRIVE_MOUNT_POINT="/home/${SUDO_USER}/SAUVEGARDE/kdrive"
KDRIVE_URL_BASE="https://connect.drive.infomaniak.com/remote.php/dav/files"

# Couleurs
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

echo_color() {
    echo -e "${2}${1}${NC}"
}

mount_kdrive() {
    if mountpoint -q "$KDRIVE_MOUNT_POINT"; then
        echo_color "⚠️  kDrive est déjà monté" $YELLOW
        return 0
    fi

    echo_color "🔄 Montage de kDrive..." $YELLOW

    # Récupérer le nom d'utilisateur depuis le fichier secrets
    USERNAME=$(grep -o '[a-zA-Z0-9._%+-]*@[a-zA-Z0-9.-]*\.[a-zA-Z]{2,}' ~/.davfs2/secrets | head -1)

    if [[ -z "$USERNAME" ]]; then
        echo_color "❌ Impossible de trouver le nom d'utilisateur dans ~/.davfs2/secrets" $RED
        return 1
    fi

    mount -t davfs "${KDRIVE_URL_BASE}/${USERNAME}/" "$KDRIVE_MOUNT_POINT"

    if mountpoint -q "$KDRIVE_MOUNT_POINT"; then
        echo_color "✅ kDrive monté avec succès dans $KDRIVE_MOUNT_POINT" $GREEN
    else
        echo_color "❌ Échec du montage kDrive" $RED
        return 1
    fi
}

unmount_kdrive() {
    if ! mountpoint -q "$KDRIVE_MOUNT_POINT"; then
        echo_color "⚠️  kDrive n'est pas monté" $YELLOW
        return 0
    fi

    echo_color "🔄 Démontage de kDrive..." $YELLOW
    umount "$KDRIVE_MOUNT_POINT"
    echo_color "✅ kDrive démonté avec succès" $GREEN
}

status_kdrive() {
    if mountpoint -q "$KDRIVE_MOUNT_POINT"; then
        echo_color "✅ kDrive est monté dans $KDRIVE_MOUNT_POINT" $GREEN
        df -h "$KDRIVE_MOUNT_POINT" | tail -1
    else
        echo_color "❌ kDrive n'est pas monté" $RED
    fi
}

case "${1:-status}" in
    mount)
        mount_kdrive
        ;;
    unmount|umount)
        unmount_kdrive
        ;;
    status)
        status_kdrive
        ;;
    *)
        echo "Usage: $0 {mount|unmount|status}"
        echo "  mount   - Monte kDrive WebDAV"
        echo "  unmount - Démonte kDrive WebDAV"
        echo "  status  - Affiche le statut du montage"
        exit 1
        ;;
esac
EOF

    chmod +x /usr/local/bin/kdrive-mount
    echo_color "✅ Script kdrive-mount créé" $GREEN
}

creer_service_systemd() {
    echo_color "🔧 Création du service systemd..." $YELLOW

    # Service de montage
    cat > /etc/systemd/system/kdrive-mount.service <<EOF
[Unit]
Description=Montage WebDAV Infomaniak kDrive
After=network-online.target
Wants=network-online.target
RequiresMountsFor=/home/${UTILISATEUR}/SAUVEGARDE

[Service]
Type=oneshot
RemainAfterExit=yes
User=root
ExecStart=/usr/local/bin/kdrive-mount mount
ExecStop=/usr/local/bin/kdrive-mount unmount
TimeoutStartSec=30
TimeoutStopSec=30

[Install]
WantedBy=multi-user.target
EOF

    # Activer le service
    systemctl daemon-reload
    systemctl enable kdrive-mount.service

    echo_color "✅ Service systemd kdrive-mount créé et activé" $GREEN
}

ajouter_aliases() {
    echo_color "🔗 Ajout des alias dans mon_shell..." $YELLOW

    ALIASES_FILE="/home/${UTILISATEUR}/.mon_shell/aliases.sh"

    # Vérifier si les alias existent déjà
    if ! grep -q "kdrive-mount" "$ALIASES_FILE" 2>/dev/null; then
        cat >> "$ALIASES_FILE" <<EOF

# ========== WebDAV kDrive Management ==========
alias kdrive-mount='sudo /usr/local/bin/kdrive-mount mount'
alias kdrive-unmount='sudo /usr/local/bin/kdrive-mount unmount'
alias kdrive-status='/usr/local/bin/kdrive-mount status'
alias kdrive-service='systemctl status kdrive-mount.service'
alias sauvegarde='cd ~/SAUVEGARDE && ls -la'
EOF

        chown "$UTILISATEUR":"$UTILISATEUR" "$ALIASES_FILE"
        echo_color "✅ Alias ajoutés à mon_shell/aliases.sh" $GREEN
    else
        echo_color "⚠️  Alias kDrive déjà présents" $YELLOW
    fi
}

tester_configuration() {
    echo_color "🧪 Test de la configuration..." $YELLOW

    # Test du service (sans démarrage automatique)
    echo_color "Test de validation du service systemd..." $BLUE
    systemctl status kdrive-mount.service --no-pager || true

    echo_color "✅ Configuration prête pour test manuel" $GREEN
    echo_color "📋 Pour tester:" $BLUE
    echo_color "   sudo kdrive-mount mount" $BLUE
    echo_color "   kdrive-status" $BLUE
    echo_color "   sudo kdrive-mount unmount" $BLUE
}

afficher_instructions() {
    echo_color "\n🎉 Installation WebDAV kDrive terminée!" $GREEN
    echo_color "\n📋 Commandes disponibles:" $BLUE
    echo_color "   kdrive-mount     - Monte kDrive" $NC
    echo_color "   kdrive-unmount   - Démonte kDrive" $NC
    echo_color "   kdrive-status    - Statut du montage" $NC
    echo_color "   kdrive-service   - Statut du service systemd" $NC
    echo_color "   sauvegarde       - Accès rapide à ~/SAUVEGARDE" $NC

    echo_color "\n🔧 Gestion du service:" $BLUE
    echo_color "   sudo systemctl start kdrive-mount.service   - Démarrer" $NC
    echo_color "   sudo systemctl stop kdrive-mount.service    - Arrêter" $NC
    echo_color "   sudo systemctl enable kdrive-mount.service  - Auto-démarrage" $NC

    echo_color "\n⚠️  Important:" $YELLOW
    echo_color "   1. Rechargez votre shell: source ~/.zshrc" $NC
    echo_color "   2. Testez le montage: kdrive-mount" $NC
    echo_color "   3. kDrive sera accessible dans: ~/SAUVEGARDE/kdrive/" $NC

    echo_color "\n🔐 Sécurité:" $BLUE
    echo_color "   - Credentials stockés dans ~/.davfs2/secrets (600)" $NC
    echo_color "   - Seul votre utilisateur peut accéder aux données" $NC
}

# --------- Exécution ---------
echo_color "🚀 Configuration WebDAV pour Infomaniak kDrive" $BLUE
echo_color "===============================================" $BLUE

verifier_root
installer_davfs2
configurer_utilisateur_davfs2
creer_structure_dossiers
configurer_credentials
configurer_davfs2_global
creer_script_mount
creer_service_systemd
ajouter_aliases
tester_configuration
afficher_instructions

echo_color "\n✨ Configuration WebDAV kDrive terminée avec succès!" $GREEN